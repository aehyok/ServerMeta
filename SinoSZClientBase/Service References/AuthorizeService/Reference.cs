//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SinoSZClientBase.AuthorizeService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="AuthorizeService.IAuthorizeService")]
    public interface IAuthorizeService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/LoginSys", ReplyAction="http://tempuri.org/IAuthorizeService/LoginSysResponse")]
        SinoSZJS.Base.Authorize.SinoUser LoginSys(string SystemID, string UserName, string Password, string CheckType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/CheckPassword", ReplyAction="http://tempuri.org/IAuthorizeService/CheckPasswordResponse")]
        bool CheckPassword(string UserName, string Password, string CheckTypte);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IAuthorizeService/ChangePassWord", ReplyAction="http://tempuri.org/IAuthorizeService/ChangePassWordResponse")]
        bool ChangePassWord(string UserName, string OldPass, string NewPass);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IAuthorizeServiceChannel : SinoSZClientBase.AuthorizeService.IAuthorizeService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class AuthorizeServiceClient : System.ServiceModel.ClientBase<SinoSZClientBase.AuthorizeService.IAuthorizeService>, SinoSZClientBase.AuthorizeService.IAuthorizeService {
        
        public AuthorizeServiceClient() {
        }
        
        public AuthorizeServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public AuthorizeServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizeServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public AuthorizeServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public SinoSZJS.Base.Authorize.SinoUser LoginSys(string SystemID, string UserName, string Password, string CheckType) {
            return base.Channel.LoginSys(SystemID, UserName, Password, CheckType);
        }
        
        public bool CheckPassword(string UserName, string Password, string CheckTypte) {
            return base.Channel.CheckPassword(UserName, Password, CheckTypte);
        }
        
        public bool ChangePassWord(string UserName, string OldPass, string NewPass) {
            return base.Channel.ChangePassWord(UserName, OldPass, NewPass);
        }
    }
}
