//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.296
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SinoSZClientBase.MetaDataService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="MetaDataService.IMetaDataService")]
    public interface IMetaDataService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/CMD_ClearView2App", ReplyAction="http://tempuri.org/IMetaDataService/CMD_ClearView2AppResponse")]
        string CMD_ClearView2App(string QueryModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetInputModelOfNamespace", ReplyAction="http://tempuri.org/IMetaDataService/GetInputModelOfNamespaceResponse")]
        SinoSZJS.Base.InputModel.MD_InputModel[] GetInputModelOfNamespace(string Namespace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetInputModel", ReplyAction="http://tempuri.org/IMetaDataService/GetInputModelResponse")]
        SinoSZJS.Base.InputModel.MD_InputModel GetInputModel(string Namespace, string ModelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNewInputModel", ReplyAction="http://tempuri.org/IMetaDataService/SaveNewInputModelResponse")]
        bool SaveNewInputModel(string Namespace, SinoSZJS.Base.InputModel.MD_InputModel SaveModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelInputModel", ReplyAction="http://tempuri.org/IMetaDataService/DelInputModelResponse")]
        bool DelInputModel(string InputModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveInputModel", ReplyAction="http://tempuri.org/IMetaDataService/SaveInputModelResponse")]
        bool SaveInputModel(SinoSZJS.Base.InputModel.MD_InputModel SaveModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddNewInputModelGroup", ReplyAction="http://tempuri.org/IMetaDataService/AddNewInputModelGroupResponse")]
        bool AddNewInputModelGroup(SinoSZJS.Base.InputModel.MD_InputModel_ColumnGroup Group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelInputModelColumnGroup", ReplyAction="http://tempuri.org/IMetaDataService/DelInputModelColumnGroupResponse")]
        bool DelInputModelColumnGroup(string InputModelID, string GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/InputModel_MoveColumnToGroup", ReplyAction="http://tempuri.org/IMetaDataService/InputModel_MoveColumnToGroupResponse")]
        bool InputModel_MoveColumnToGroup(SinoSZJS.Base.InputModel.MD_InputModel_Column Col, SinoSZJS.Base.InputModel.MD_InputModel_ColumnGroup InputModel_ColumnGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveInputModelColumnGroup", ReplyAction="http://tempuri.org/IMetaDataService/SaveInputModelColumnGroupResponse")]
        bool SaveInputModelColumnGroup(SinoSZJS.Base.InputModel.MD_InputModel_ColumnGroup Group);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/FindInputModelColumnByName", ReplyAction="http://tempuri.org/IMetaDataService/FindInputModelColumnByNameResponse")]
        bool FindInputModelColumnByName(string InputModelID, string ColumnName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddNewInputModelColumn", ReplyAction="http://tempuri.org/IMetaDataService/AddNewInputModelColumnResponse")]
        bool AddNewInputModelColumn(string InputModelID, string GroupID, string ColumnName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelInputModelColumn", ReplyAction="http://tempuri.org/IMetaDataService/DelInputModelColumnResponse")]
        bool DelInputModelColumn(string ColumnID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/OracleTableExist", ReplyAction="http://tempuri.org/IMetaDataService/OracleTableExistResponse")]
        bool OracleTableExist(string TableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddNewInputModelSavedTable", ReplyAction="http://tempuri.org/IMetaDataService/AddNewInputModelSavedTableResponse")]
        bool AddNewInputModelSavedTable(string InputModelID, string TableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelInputModelSavedTable", ReplyAction="http://tempuri.org/IMetaDataService/DelInputModelSavedTableResponse")]
        bool DelInputModelSavedTable(string TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveInputModelSaveTable", ReplyAction="http://tempuri.org/IMetaDataService/SaveInputModelSaveTableResponse")]
        bool SaveInputModelSaveTable(SinoSZJS.Base.InputModel.MD_InputModel_SaveTable NewTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddInputModelTableColumn", ReplyAction="http://tempuri.org/IMetaDataService/AddInputModelTableColumnResponse")]
        bool AddInputModelTableColumn(string TableName, string AddFieldName, string DataType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetDBPrimayKeyList", ReplyAction="http://tempuri.org/IMetaDataService/GetDBPrimayKeyListResponse")]
        string[] GetDBPrimayKeyList(string TableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelInputModelTableColumn", ReplyAction="http://tempuri.org/IMetaDataService/DelInputModelTableColumnResponse")]
        bool DelInputModelTableColumn(string TableName, string DelFieldName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddChildInputModel", ReplyAction="http://tempuri.org/IMetaDataService/AddChildInputModelResponse")]
        bool AddChildInputModel(string MainModelID, string ChildModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveInputModelChildDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveInputModelChildDefineResponse")]
        bool SaveInputModelChildDefine(SinoSZJS.Base.InputModel.MD_InputModel_Child InputModelChild);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelRefTable", ReplyAction="http://tempuri.org/IMetaDataService/DelRefTableResponse")]
        bool DelRefTable(string RefTableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelInputModelChild", ReplyAction="http://tempuri.org/IMetaDataService/DelInputModelChildResponse")]
        bool DelInputModelChild(string ChildModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistID", ReplyAction="http://tempuri.org/IMetaDataService/IsExistIDResponse")]
        bool IsExistID(string Oldid, string TableName, string Colname);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetView2ViewGroupOfQueryModel", ReplyAction="http://tempuri.org/IMetaDataService/GetView2ViewGroupOfQueryModelResponse")]
        SinoSZJS.Base.MetaData.Define.MD_View2ViewGroup[] GetView2ViewGroupOfQueryModel(string ViewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddView2ViewGroup", ReplyAction="http://tempuri.org/IMetaDataService/AddView2ViewGroupResponse")]
        string AddView2ViewGroup(string ViewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveView2ViewGroup", ReplyAction="http://tempuri.org/IMetaDataService/SaveView2ViewGroupResponse")]
        bool SaveView2ViewGroup(SinoSZJS.Base.MetaData.Define.MD_View2ViewGroup View2ViewGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetView2ViewList", ReplyAction="http://tempuri.org/IMetaDataService/GetView2ViewListResponse")]
        SinoSZJS.Base.MetaData.Define.MD_View2View[] GetView2ViewList(string GroupID, string ViewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelView2ViewGroup", ReplyAction="http://tempuri.org/IMetaDataService/DelView2ViewGroupResponse")]
        string DelView2ViewGroup(string GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddView2View", ReplyAction="http://tempuri.org/IMetaDataService/AddView2ViewResponse")]
        string AddView2View(string ViewID, string GroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveView2View", ReplyAction="http://tempuri.org/IMetaDataService/SaveView2ViewResponse")]
        bool SaveView2View(SinoSZJS.Base.MetaData.Define.MD_View2View View2View);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/CMD_DelView2View", ReplyAction="http://tempuri.org/IMetaDataService/CMD_DelView2ViewResponse")]
        string CMD_DelView2View(string View2ViewID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetQueryModelExRights", ReplyAction="http://tempuri.org/IMetaDataService/GetQueryModelExRightsResponse")]
        SinoSZJS.Base.MetaData.Define.MD_QueryModel_ExRight[] GetQueryModelExRights(string QueryModelID, string FatherID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddNewViewExRight", ReplyAction="http://tempuri.org/IMetaDataService/AddNewViewExRightResponse")]
        bool AddNewViewExRight(string RightValue, string RightTitle, string ViewID, SinoSZJS.Base.MetaData.Define.MD_QueryModel_ExRight FatherRight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveQueryModelExRight", ReplyAction="http://tempuri.org/IMetaDataService/SaveQueryModelExRightResponse")]
        bool SaveQueryModelExRight(SinoSZJS.Base.MetaData.Define.MD_QueryModel_ExRight QueryModel_ExRight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/CMD_DelViewExRight", ReplyAction="http://tempuri.org/IMetaDataService/CMD_DelViewExRightResponse")]
        string CMD_DelViewExRight(SinoSZJS.Base.MetaData.Define.MD_QueryModel_ExRight ExRight);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetView2GuideLineList", ReplyAction="http://tempuri.org/IMetaDataService/GetView2GuideLineListResponse")]
        SinoSZJS.Base.MetaData.Define.MD_View_GuideLine[] GetView2GuideLineList(string QueryModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveView2GL", ReplyAction="http://tempuri.org/IMetaDataService/SaveView2GLResponse")]
        bool SaveView2GL(string V2GID, string VIEWID, string GuideLineID, string Params, int DisplayOrder, string DisplayTitle);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/CMD_DelView2GL", ReplyAction="http://tempuri.org/IMetaDataService/CMD_DelView2GLResponse")]
        string CMD_DelView2GL(SinoSZJS.Base.MetaData.Define.MD_View_GuideLine View2GL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetView2ApplicationList", ReplyAction="http://tempuri.org/IMetaDataService/GetView2ApplicationListResponse")]
        SinoSZJS.Base.MetaData.Define.MD_View2App[] GetView2ApplicationList(string QueryModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveView2App", ReplyAction="http://tempuri.org/IMetaDataService/SaveView2AppResponse")]
        bool SaveView2App(string V2AID, SinoSZJS.Base.MetaData.Define.MD_View2App View2AppData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/CMD_DelView2App", ReplyAction="http://tempuri.org/IMetaDataService/CMD_DelView2AppResponse")]
        string CMD_DelView2App(string V2AID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetSubMenuDefine", ReplyAction="http://tempuri.org/IMetaDataService/GetSubMenuDefineResponse")]
        SinoSZJS.Base.MetaData.Define.MD_Menu[] GetSubMenuDefine(string FatherMenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveMenuDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveMenuDefineResponse")]
        bool SaveMenuDefine(SinoSZJS.Base.MetaData.Define.MD_Menu Menu);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddSystemMenu", ReplyAction="http://tempuri.org/IMetaDataService/AddSystemMenuResponse")]
        bool AddSystemMenu(string NodeCode);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddSystemSubMenu", ReplyAction="http://tempuri.org/IMetaDataService/AddSystemSubMenuResponse")]
        bool AddSystemSubMenu(string FatherMenuID, string NodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelSystemMenu", ReplyAction="http://tempuri.org/IMetaDataService/DelSystemMenuResponse")]
        bool DelSystemMenu(string MenuID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetGuideLineGroup", ReplyAction="http://tempuri.org/IMetaDataService/GetGuideLineGroupResponse")]
        SinoSZJS.Base.MetaData.QueryModel.MD_GuideLineGroup[] GetGuideLineGroup(string NodeCode, string GuideLineGroupType);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetGuideLineOfGroup", ReplyAction="http://tempuri.org/IMetaDataService/GetGuideLineOfGroupResponse")]
        SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine[] GetGuideLineOfGroup(string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveGuideLineGroupDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveGuideLineGroupDefineResponse")]
        bool SaveGuideLineGroupDefine(SinoSZJS.Base.MetaData.QueryModel.MD_GuideLineGroup GuideLineGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetChildGuideLines", ReplyAction="http://tempuri.org/IMetaDataService/GetChildGuideLinesResponse")]
        SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine[] GetChildGuideLines(string FatherGuildLineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelGuideLineGroup", ReplyAction="http://tempuri.org/IMetaDataService/DelGuideLineGroupResponse")]
        bool DelGuideLineGroup(string GuideLineGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistChildOfGuideLineGroup", ReplyAction="http://tempuri.org/IMetaDataService/IsExistChildOfGuideLineGroupResponse")]
        bool IsExistChildOfGuideLineGroup(string GuideLineGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNewGuideLineGroupDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveNewGuideLineGroupDefineResponse")]
        bool SaveNewGuideLineGroupDefine(SinoSZJS.Base.MetaData.QueryModel.MD_GuideLineGroup GuideLineGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistGuideLineGroupName", ReplyAction="http://tempuri.org/IMetaDataService/IsExistGuideLineGroupNameResponse")]
        bool IsExistGuideLineGroupName(string GuideLineGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/InsertNewGuideLineItem", ReplyAction="http://tempuri.org/IMetaDataService/InsertNewGuideLineItemResponse")]
        bool InsertNewGuideLineItem(string GuideLineName, decimal FatherID, string GuideLineGroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistChildOfGuideLine", ReplyAction="http://tempuri.org/IMetaDataService/IsExistChildOfGuideLineResponse")]
        bool IsExistChildOfGuideLine(string GuideLineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelGuideLine", ReplyAction="http://tempuri.org/IMetaDataService/DelGuideLineResponse")]
        bool DelGuideLine(string GuideLineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveGuideLine", ReplyAction="http://tempuri.org/IMetaDataService/SaveGuideLineResponse")]
        bool SaveGuideLine(SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine GuideLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetConceptGroups", ReplyAction="http://tempuri.org/IMetaDataService/GetConceptGroupsResponse")]
        SinoSZJS.Base.MetaData.Define.MD_ConceptGroup[] GetConceptGroups();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetSubConceptTagDefine", ReplyAction="http://tempuri.org/IMetaDataService/GetSubConceptTagDefineResponse")]
        SinoSZJS.Base.MetaData.Define.MD_ConceptItem[] GetSubConceptTagDefine(string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistConceptGroup", ReplyAction="http://tempuri.org/IMetaDataService/IsExistConceptGroupResponse")]
        bool IsExistConceptGroup(string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveConceptGroup", ReplyAction="http://tempuri.org/IMetaDataService/SaveConceptGroupResponse")]
        bool SaveConceptGroup(SinoSZJS.Base.MetaData.Define.MD_ConceptGroup ConceptGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddNewConceptGroup", ReplyAction="http://tempuri.org/IMetaDataService/AddNewConceptGroupResponse")]
        bool AddNewConceptGroup(string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelConcpetGroup", ReplyAction="http://tempuri.org/IMetaDataService/DelConcpetGroupResponse")]
        bool DelConcpetGroup(string ConceptGroup);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistChildOfConceptGroup", ReplyAction="http://tempuri.org/IMetaDataService/IsExistChildOfConceptGroupResponse")]
        bool IsExistChildOfConceptGroup(string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistConceptTag", ReplyAction="http://tempuri.org/IMetaDataService/IsExistConceptTagResponse")]
        bool IsExistConceptTag(string TagName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddNewConceptTag", ReplyAction="http://tempuri.org/IMetaDataService/AddNewConceptTagResponse")]
        bool AddNewConceptTag(string TagName, string Description, string GroupName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveConceptTag", ReplyAction="http://tempuri.org/IMetaDataService/SaveConceptTagResponse")]
        bool SaveConceptTag(SinoSZJS.Base.MetaData.Define.MD_ConceptItem ConceptItem);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelConceptTag", ReplyAction="http://tempuri.org/IMetaDataService/DelConceptTagResponse")]
        bool DelConceptTag(string CTag);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetGuideLineDefine", ReplyAction="http://tempuri.org/IMetaDataService/GetGuideLineDefineResponse")]
        SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine GetGuideLineDefine(string GuideLineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNewGuideLine", ReplyAction="http://tempuri.org/IMetaDataService/SaveNewGuideLineResponse")]
        bool SaveNewGuideLine(SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine GuideLine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistGuideLineID", ReplyAction="http://tempuri.org/IMetaDataService/IsExistGuideLineIDResponse")]
        bool IsExistGuideLineID(string GuideLineID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetRightData", ReplyAction="http://tempuri.org/IMetaDataService/GetRightDataResponse")]
        SinoSZJS.Base.MetaData.Define.MD_RightDefine[] GetRightData(string SystemID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveRightDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveRightDefineResponse")]
        bool SaveRightDefine(SinoSZJS.Base.MetaData.Define.MD_RightDefine[] RightList);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/ImportTableDefine", ReplyAction="http://tempuri.org/IMetaDataService/ImportTableDefineResponse")]
        bool ImportTableDefine(SinoSZJS.Base.MetaData.Define.MD_Table TableDefine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/ImportRefTableDefine", ReplyAction="http://tempuri.org/IMetaDataService/ImportRefTableDefineResponse")]
        bool ImportRefTableDefine(SinoSZJS.Base.MetaData.Define.MD_RefTable RefTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/ImportQueryModelDefine", ReplyAction="http://tempuri.org/IMetaDataService/ImportQueryModelDefineResponse")]
        bool ImportQueryModelDefine(SinoSZJS.Base.MetaData.Define.MD_QueryModel QueryModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddTableRelationView", ReplyAction="http://tempuri.org/IMetaDataService/AddTableRelationViewResponse")]
        string AddTableRelationView(string TbleID, string ModelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetAllQueryModelNames", ReplyAction="http://tempuri.org/IMetaDataService/GetAllQueryModelNamesResponse")]
        string[] GetAllQueryModelNames();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetTable2ViewList", ReplyAction="http://tempuri.org/IMetaDataService/GetTable2ViewListResponse")]
        SinoSZJS.Base.MetaData.Define.MD_Table2View[] GetTable2ViewList(string TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveQueryModel_UserDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveQueryModel_UserDefineResponse")]
        bool SaveQueryModel_UserDefine(string QueryModelID, string Display, string Descript);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveViewTable_UserDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveViewTable_UserDefineResponse")]
        bool SaveViewTable_UserDefine(string ViewTableID, string DisplayString, SinoSZJS.Base.MetaData.EnumDefine.MDType_DisplayType DisplayType, SinoSZJS.Base.MetaData.Define.MD_ViewTableColumn[] TableColumnDefine);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveViewTableOrder_UserDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveViewTableOrder_UserDefineResponse")]
        void SaveViewTableOrder_UserDefine(System.Collections.Generic.Dictionary<string, int> ChildTableOrder);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetQueryModelByName", ReplyAction="http://tempuri.org/IMetaDataService/GetQueryModelByNameResponse")]
        SinoSZJS.Base.MetaData.Define.MD_QueryModel GetQueryModelByName(string ModelName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetQueryModelByID", ReplyAction="http://tempuri.org/IMetaDataService/GetQueryModelByIDResponse")]
        SinoSZJS.Base.MetaData.Define.MD_QueryModel GetQueryModelByID(string ModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetQueryModelGroup", ReplyAction="http://tempuri.org/IMetaDataService/GetQueryModelGroupResponse")]
        SinoSZJS.Base.MetaData.Define.MD_QueryModelGroup GetQueryModelGroup(string QueryModelGroupID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetRefTable", ReplyAction="http://tempuri.org/IMetaDataService/GetRefTableResponse")]
        SinoSZJS.Base.MetaData.Define.MD_RefTable GetRefTable(string RefTableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetNodeList", ReplyAction="http://tempuri.org/IMetaDataService/GetNodeListResponse")]
        SinoSZJS.Base.MetaData.Define.MD_Nodes[] GetNodeList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetNameSpaceAtNode", ReplyAction="http://tempuri.org/IMetaDataService/GetNameSpaceAtNodeResponse")]
        SinoSZJS.Base.MetaData.Define.MD_Namespace[] GetNameSpaceAtNode(string NodeDWDM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNewNameSapce", ReplyAction="http://tempuri.org/IMetaDataService/SaveNewNameSapceResponse")]
        bool SaveNewNameSapce(SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNodes", ReplyAction="http://tempuri.org/IMetaDataService/SaveNodesResponse")]
        bool SaveNodes(SinoSZJS.Base.MetaData.Define.MD_Nodes Nodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNewNodes", ReplyAction="http://tempuri.org/IMetaDataService/SaveNewNodesResponse")]
        bool SaveNewNodes(SinoSZJS.Base.MetaData.Define.MD_Nodes Nodes);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelNodes", ReplyAction="http://tempuri.org/IMetaDataService/DelNodesResponse")]
        bool DelNodes(string NodeID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNameSapce", ReplyAction="http://tempuri.org/IMetaDataService/SaveNameSapceResponse")]
        bool SaveNameSapce(SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelNamespace", ReplyAction="http://tempuri.org/IMetaDataService/DelNamespaceResponse")]
        bool DelNamespace(SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetDBTableList", ReplyAction="http://tempuri.org/IMetaDataService/GetDBTableListResponse")]
        SinoSZJS.Base.MetaData.Define.DB_TableMeta[] GetDBTableList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetDBTableListOfDMB", ReplyAction="http://tempuri.org/IMetaDataService/GetDBTableListOfDMBResponse")]
        SinoSZJS.Base.MetaData.Define.DB_TableMeta[] GetDBTableListOfDMB();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetDBColumnsOfTable", ReplyAction="http://tempuri.org/IMetaDataService/GetDBColumnsOfTableResponse")]
        SinoSZJS.Base.MetaData.Define.DB_ColumnMeta[] GetDBColumnsOfTable(string TableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNewTable", ReplyAction="http://tempuri.org/IMetaDataService/SaveNewTableResponse")]
        bool SaveNewTable(SinoSZJS.Base.MetaData.Define.DB_TableMeta TableMeta, SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetTablesAtNamespace", ReplyAction="http://tempuri.org/IMetaDataService/GetTablesAtNamespaceResponse")]
        SinoSZJS.Base.MetaData.Define.MD_Table[] GetTablesAtNamespace(string NsName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetTableByTableID", ReplyAction="http://tempuri.org/IMetaDataService/GetTableByTableIDResponse")]
        SinoSZJS.Base.MetaData.Define.MD_Table GetTableByTableID(string TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetQueryModelAtNamespace", ReplyAction="http://tempuri.org/IMetaDataService/GetQueryModelAtNamespaceResponse")]
        SinoSZJS.Base.MetaData.Define.MD_QueryModel[] GetQueryModelAtNamespace(string NsName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetRefTableAtNamespace", ReplyAction="http://tempuri.org/IMetaDataService/GetRefTableAtNamespaceResponse")]
        SinoSZJS.Base.MetaData.Define.MD_RefTable[] GetRefTableAtNamespace(string Namespace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetColumnsOfTable", ReplyAction="http://tempuri.org/IMetaDataService/GetColumnsOfTableResponse")]
        SinoSZJS.Base.MetaData.Define.MD_TableColumn[] GetColumnsOfTable(string TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetMainTableOfQueryModel", ReplyAction="http://tempuri.org/IMetaDataService/GetMainTableOfQueryModelResponse")]
        SinoSZJS.Base.MetaData.Define.MD_ViewTable GetMainTableOfQueryModel(string QueryModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetNewID", ReplyAction="http://tempuri.org/IMetaDataService/GetNewIDResponse")]
        string GetNewID();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveTableDefine", ReplyAction="http://tempuri.org/IMetaDataService/SaveTableDefineResponse")]
        bool SaveTableDefine(SinoSZJS.Base.MetaData.Define.MD_Table Table);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNewQueryModel", ReplyAction="http://tempuri.org/IMetaDataService/SaveNewQueryModelResponse")]
        bool SaveNewQueryModel(SinoSZJS.Base.MetaData.Define.MD_QueryModel QueryModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveQueryModel", ReplyAction="http://tempuri.org/IMetaDataService/SaveQueryModelResponse")]
        bool SaveQueryModel(SinoSZJS.Base.MetaData.Define.MD_QueryModel QueryModel);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveViewMainTable", ReplyAction="http://tempuri.org/IMetaDataService/SaveViewMainTableResponse")]
        bool SaveViewMainTable(SinoSZJS.Base.MetaData.Define.MD_ViewTable ViewTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetChildTableOfQueryModel", ReplyAction="http://tempuri.org/IMetaDataService/GetChildTableOfQueryModelResponse")]
        SinoSZJS.Base.MetaData.Define.MD_ViewTable[] GetChildTableOfQueryModel(string QueryModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveViewChildTable", ReplyAction="http://tempuri.org/IMetaDataService/SaveViewChildTableResponse")]
        bool SaveViewChildTable(SinoSZJS.Base.MetaData.Define.MD_ViewTable ViewTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddMainTableToQueryModel", ReplyAction="http://tempuri.org/IMetaDataService/AddMainTableToQueryModelResponse")]
        bool AddMainTableToQueryModel(string QueryModelID, SinoSZJS.Base.MetaData.Define.MD_Table SelectedTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/AddChildTableToQueryModel", ReplyAction="http://tempuri.org/IMetaDataService/AddChildTableToQueryModelResponse")]
        bool AddChildTableToQueryModel(string QueryModelID, string MainTableID, SinoSZJS.Base.MetaData.Define.MD_Table SelectedTable);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistChildTable", ReplyAction="http://tempuri.org/IMetaDataService/IsExistChildTableResponse")]
        bool IsExistChildTable(string ViewTableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelViewTable", ReplyAction="http://tempuri.org/IMetaDataService/DelViewTableResponse")]
        bool DelViewTable(string ViewTableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistChildOfView", ReplyAction="http://tempuri.org/IMetaDataService/IsExistChildOfViewResponse")]
        bool IsExistChildOfView(string QueryModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelViewMeta", ReplyAction="http://tempuri.org/IMetaDataService/DelViewMetaResponse")]
        bool DelViewMeta(string QueryModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelViewAndChildren", ReplyAction="http://tempuri.org/IMetaDataService/DelViewAndChildrenResponse")]
        bool DelViewAndChildren(string QueryModelID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/IsExistViewUsedTable", ReplyAction="http://tempuri.org/IMetaDataService/IsExistViewUsedTableResponse")]
        bool IsExistViewUsedTable(string TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/DelTableMeta", ReplyAction="http://tempuri.org/IMetaDataService/DelTableMetaResponse")]
        bool DelTableMeta(string TableID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveNewRefTable", ReplyAction="http://tempuri.org/IMetaDataService/SaveNewRefTableResponse")]
        bool SaveNewRefTable(SinoSZJS.Base.MetaData.Define.DB_TableMeta TableMeta, SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/Get_RefTableColumn", ReplyAction="http://tempuri.org/IMetaDataService/Get_RefTableColumnResponse")]
        System.Data.DataTable Get_RefTableColumn(string RefTableName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/SaveRefTable", ReplyAction="http://tempuri.org/IMetaDataService/SaveRefTableResponse")]
        bool SaveRefTable(SinoSZJS.Base.MetaData.Define.MD_RefTable RefTable, System.Data.DataTable RefData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IMetaDataService/GetMenuDefineOfNode", ReplyAction="http://tempuri.org/IMetaDataService/GetMenuDefineOfNodeResponse")]
        SinoSZJS.Base.MetaData.Define.MD_Menu[] GetMenuDefineOfNode(string NodeCode);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IMetaDataServiceChannel : SinoSZClientBase.MetaDataService.IMetaDataService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class MetaDataServiceClient : System.ServiceModel.ClientBase<SinoSZClientBase.MetaDataService.IMetaDataService>, SinoSZClientBase.MetaDataService.IMetaDataService {
        
        public MetaDataServiceClient() {
        }
        
        public MetaDataServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public MetaDataServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetaDataServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public MetaDataServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public string CMD_ClearView2App(string QueryModelID) {
            return base.Channel.CMD_ClearView2App(QueryModelID);
        }
        
        public SinoSZJS.Base.InputModel.MD_InputModel[] GetInputModelOfNamespace(string Namespace) {
            return base.Channel.GetInputModelOfNamespace(Namespace);
        }
        
        public SinoSZJS.Base.InputModel.MD_InputModel GetInputModel(string Namespace, string ModelName) {
            return base.Channel.GetInputModel(Namespace, ModelName);
        }
        
        public bool SaveNewInputModel(string Namespace, SinoSZJS.Base.InputModel.MD_InputModel SaveModel) {
            return base.Channel.SaveNewInputModel(Namespace, SaveModel);
        }
        
        public bool DelInputModel(string InputModelID) {
            return base.Channel.DelInputModel(InputModelID);
        }
        
        public bool SaveInputModel(SinoSZJS.Base.InputModel.MD_InputModel SaveModel) {
            return base.Channel.SaveInputModel(SaveModel);
        }
        
        public bool AddNewInputModelGroup(SinoSZJS.Base.InputModel.MD_InputModel_ColumnGroup Group) {
            return base.Channel.AddNewInputModelGroup(Group);
        }
        
        public bool DelInputModelColumnGroup(string InputModelID, string GroupID) {
            return base.Channel.DelInputModelColumnGroup(InputModelID, GroupID);
        }
        
        public bool InputModel_MoveColumnToGroup(SinoSZJS.Base.InputModel.MD_InputModel_Column Col, SinoSZJS.Base.InputModel.MD_InputModel_ColumnGroup InputModel_ColumnGroup) {
            return base.Channel.InputModel_MoveColumnToGroup(Col, InputModel_ColumnGroup);
        }
        
        public bool SaveInputModelColumnGroup(SinoSZJS.Base.InputModel.MD_InputModel_ColumnGroup Group) {
            return base.Channel.SaveInputModelColumnGroup(Group);
        }
        
        public bool FindInputModelColumnByName(string InputModelID, string ColumnName) {
            return base.Channel.FindInputModelColumnByName(InputModelID, ColumnName);
        }
        
        public bool AddNewInputModelColumn(string InputModelID, string GroupID, string ColumnName) {
            return base.Channel.AddNewInputModelColumn(InputModelID, GroupID, ColumnName);
        }
        
        public bool DelInputModelColumn(string ColumnID) {
            return base.Channel.DelInputModelColumn(ColumnID);
        }
        
        public bool OracleTableExist(string TableName) {
            return base.Channel.OracleTableExist(TableName);
        }
        
        public bool AddNewInputModelSavedTable(string InputModelID, string TableName) {
            return base.Channel.AddNewInputModelSavedTable(InputModelID, TableName);
        }
        
        public bool DelInputModelSavedTable(string TableID) {
            return base.Channel.DelInputModelSavedTable(TableID);
        }
        
        public bool SaveInputModelSaveTable(SinoSZJS.Base.InputModel.MD_InputModel_SaveTable NewTable) {
            return base.Channel.SaveInputModelSaveTable(NewTable);
        }
        
        public bool AddInputModelTableColumn(string TableName, string AddFieldName, string DataType) {
            return base.Channel.AddInputModelTableColumn(TableName, AddFieldName, DataType);
        }
        
        public string[] GetDBPrimayKeyList(string TableName) {
            return base.Channel.GetDBPrimayKeyList(TableName);
        }
        
        public bool DelInputModelTableColumn(string TableName, string DelFieldName) {
            return base.Channel.DelInputModelTableColumn(TableName, DelFieldName);
        }
        
        public bool AddChildInputModel(string MainModelID, string ChildModelID) {
            return base.Channel.AddChildInputModel(MainModelID, ChildModelID);
        }
        
        public bool SaveInputModelChildDefine(SinoSZJS.Base.InputModel.MD_InputModel_Child InputModelChild) {
            return base.Channel.SaveInputModelChildDefine(InputModelChild);
        }
        
        public bool DelRefTable(string RefTableID) {
            return base.Channel.DelRefTable(RefTableID);
        }
        
        public bool DelInputModelChild(string ChildModelID) {
            return base.Channel.DelInputModelChild(ChildModelID);
        }
        
        public bool IsExistID(string Oldid, string TableName, string Colname) {
            return base.Channel.IsExistID(Oldid, TableName, Colname);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_View2ViewGroup[] GetView2ViewGroupOfQueryModel(string ViewID) {
            return base.Channel.GetView2ViewGroupOfQueryModel(ViewID);
        }
        
        public string AddView2ViewGroup(string ViewID) {
            return base.Channel.AddView2ViewGroup(ViewID);
        }
        
        public bool SaveView2ViewGroup(SinoSZJS.Base.MetaData.Define.MD_View2ViewGroup View2ViewGroup) {
            return base.Channel.SaveView2ViewGroup(View2ViewGroup);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_View2View[] GetView2ViewList(string GroupID, string ViewID) {
            return base.Channel.GetView2ViewList(GroupID, ViewID);
        }
        
        public string DelView2ViewGroup(string GroupID) {
            return base.Channel.DelView2ViewGroup(GroupID);
        }
        
        public string AddView2View(string ViewID, string GroupID) {
            return base.Channel.AddView2View(ViewID, GroupID);
        }
        
        public bool SaveView2View(SinoSZJS.Base.MetaData.Define.MD_View2View View2View) {
            return base.Channel.SaveView2View(View2View);
        }
        
        public string CMD_DelView2View(string View2ViewID) {
            return base.Channel.CMD_DelView2View(View2ViewID);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_QueryModel_ExRight[] GetQueryModelExRights(string QueryModelID, string FatherID) {
            return base.Channel.GetQueryModelExRights(QueryModelID, FatherID);
        }
        
        public bool AddNewViewExRight(string RightValue, string RightTitle, string ViewID, SinoSZJS.Base.MetaData.Define.MD_QueryModel_ExRight FatherRight) {
            return base.Channel.AddNewViewExRight(RightValue, RightTitle, ViewID, FatherRight);
        }
        
        public bool SaveQueryModelExRight(SinoSZJS.Base.MetaData.Define.MD_QueryModel_ExRight QueryModel_ExRight) {
            return base.Channel.SaveQueryModelExRight(QueryModel_ExRight);
        }
        
        public string CMD_DelViewExRight(SinoSZJS.Base.MetaData.Define.MD_QueryModel_ExRight ExRight) {
            return base.Channel.CMD_DelViewExRight(ExRight);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_View_GuideLine[] GetView2GuideLineList(string QueryModelID) {
            return base.Channel.GetView2GuideLineList(QueryModelID);
        }
        
        public bool SaveView2GL(string V2GID, string VIEWID, string GuideLineID, string Params, int DisplayOrder, string DisplayTitle) {
            return base.Channel.SaveView2GL(V2GID, VIEWID, GuideLineID, Params, DisplayOrder, DisplayTitle);
        }
        
        public string CMD_DelView2GL(SinoSZJS.Base.MetaData.Define.MD_View_GuideLine View2GL) {
            return base.Channel.CMD_DelView2GL(View2GL);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_View2App[] GetView2ApplicationList(string QueryModelID) {
            return base.Channel.GetView2ApplicationList(QueryModelID);
        }
        
        public bool SaveView2App(string V2AID, SinoSZJS.Base.MetaData.Define.MD_View2App View2AppData) {
            return base.Channel.SaveView2App(V2AID, View2AppData);
        }
        
        public string CMD_DelView2App(string V2AID) {
            return base.Channel.CMD_DelView2App(V2AID);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_Menu[] GetSubMenuDefine(string FatherMenuID) {
            return base.Channel.GetSubMenuDefine(FatherMenuID);
        }
        
        public bool SaveMenuDefine(SinoSZJS.Base.MetaData.Define.MD_Menu Menu) {
            return base.Channel.SaveMenuDefine(Menu);
        }
        
        public bool AddSystemMenu(string NodeCode) {
            return base.Channel.AddSystemMenu(NodeCode);
        }
        
        public bool AddSystemSubMenu(string FatherMenuID, string NodeID) {
            return base.Channel.AddSystemSubMenu(FatherMenuID, NodeID);
        }
        
        public bool DelSystemMenu(string MenuID) {
            return base.Channel.DelSystemMenu(MenuID);
        }
        
        public SinoSZJS.Base.MetaData.QueryModel.MD_GuideLineGroup[] GetGuideLineGroup(string NodeCode, string GuideLineGroupType) {
            return base.Channel.GetGuideLineGroup(NodeCode, GuideLineGroupType);
        }
        
        public SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine[] GetGuideLineOfGroup(string GroupName) {
            return base.Channel.GetGuideLineOfGroup(GroupName);
        }
        
        public bool SaveGuideLineGroupDefine(SinoSZJS.Base.MetaData.QueryModel.MD_GuideLineGroup GuideLineGroup) {
            return base.Channel.SaveGuideLineGroupDefine(GuideLineGroup);
        }
        
        public SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine[] GetChildGuideLines(string FatherGuildLineID) {
            return base.Channel.GetChildGuideLines(FatherGuildLineID);
        }
        
        public bool DelGuideLineGroup(string GuideLineGroupName) {
            return base.Channel.DelGuideLineGroup(GuideLineGroupName);
        }
        
        public bool IsExistChildOfGuideLineGroup(string GuideLineGroupName) {
            return base.Channel.IsExistChildOfGuideLineGroup(GuideLineGroupName);
        }
        
        public bool SaveNewGuideLineGroupDefine(SinoSZJS.Base.MetaData.QueryModel.MD_GuideLineGroup GuideLineGroup) {
            return base.Channel.SaveNewGuideLineGroupDefine(GuideLineGroup);
        }
        
        public bool IsExistGuideLineGroupName(string GuideLineGroupName) {
            return base.Channel.IsExistGuideLineGroupName(GuideLineGroupName);
        }
        
        public bool InsertNewGuideLineItem(string GuideLineName, decimal FatherID, string GuideLineGroupName) {
            return base.Channel.InsertNewGuideLineItem(GuideLineName, FatherID, GuideLineGroupName);
        }
        
        public bool IsExistChildOfGuideLine(string GuideLineID) {
            return base.Channel.IsExistChildOfGuideLine(GuideLineID);
        }
        
        public bool DelGuideLine(string GuideLineID) {
            return base.Channel.DelGuideLine(GuideLineID);
        }
        
        public bool SaveGuideLine(SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine GuideLine) {
            return base.Channel.SaveGuideLine(GuideLine);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_ConceptGroup[] GetConceptGroups() {
            return base.Channel.GetConceptGroups();
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_ConceptItem[] GetSubConceptTagDefine(string GroupName) {
            return base.Channel.GetSubConceptTagDefine(GroupName);
        }
        
        public bool IsExistConceptGroup(string GroupName) {
            return base.Channel.IsExistConceptGroup(GroupName);
        }
        
        public bool SaveConceptGroup(SinoSZJS.Base.MetaData.Define.MD_ConceptGroup ConceptGroup) {
            return base.Channel.SaveConceptGroup(ConceptGroup);
        }
        
        public bool AddNewConceptGroup(string GroupName) {
            return base.Channel.AddNewConceptGroup(GroupName);
        }
        
        public bool DelConcpetGroup(string ConceptGroup) {
            return base.Channel.DelConcpetGroup(ConceptGroup);
        }
        
        public bool IsExistChildOfConceptGroup(string GroupName) {
            return base.Channel.IsExistChildOfConceptGroup(GroupName);
        }
        
        public bool IsExistConceptTag(string TagName) {
            return base.Channel.IsExistConceptTag(TagName);
        }
        
        public bool AddNewConceptTag(string TagName, string Description, string GroupName) {
            return base.Channel.AddNewConceptTag(TagName, Description, GroupName);
        }
        
        public bool SaveConceptTag(SinoSZJS.Base.MetaData.Define.MD_ConceptItem ConceptItem) {
            return base.Channel.SaveConceptTag(ConceptItem);
        }
        
        public bool DelConceptTag(string CTag) {
            return base.Channel.DelConceptTag(CTag);
        }
        
        public SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine GetGuideLineDefine(string GuideLineID) {
            return base.Channel.GetGuideLineDefine(GuideLineID);
        }
        
        public bool SaveNewGuideLine(SinoSZJS.Base.MetaData.QueryModel.MD_GuideLine GuideLine) {
            return base.Channel.SaveNewGuideLine(GuideLine);
        }
        
        public bool IsExistGuideLineID(string GuideLineID) {
            return base.Channel.IsExistGuideLineID(GuideLineID);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_RightDefine[] GetRightData(string SystemID) {
            return base.Channel.GetRightData(SystemID);
        }
        
        public bool SaveRightDefine(SinoSZJS.Base.MetaData.Define.MD_RightDefine[] RightList) {
            return base.Channel.SaveRightDefine(RightList);
        }
        
        public bool ImportTableDefine(SinoSZJS.Base.MetaData.Define.MD_Table TableDefine) {
            return base.Channel.ImportTableDefine(TableDefine);
        }
        
        public bool ImportRefTableDefine(SinoSZJS.Base.MetaData.Define.MD_RefTable RefTable) {
            return base.Channel.ImportRefTableDefine(RefTable);
        }
        
        public bool ImportQueryModelDefine(SinoSZJS.Base.MetaData.Define.MD_QueryModel QueryModel) {
            return base.Channel.ImportQueryModelDefine(QueryModel);
        }
        
        public string AddTableRelationView(string TbleID, string ModelName) {
            return base.Channel.AddTableRelationView(TbleID, ModelName);
        }
        
        public string[] GetAllQueryModelNames() {
            return base.Channel.GetAllQueryModelNames();
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_Table2View[] GetTable2ViewList(string TableID) {
            return base.Channel.GetTable2ViewList(TableID);
        }
        
        public bool SaveQueryModel_UserDefine(string QueryModelID, string Display, string Descript) {
            return base.Channel.SaveQueryModel_UserDefine(QueryModelID, Display, Descript);
        }
        
        public bool SaveViewTable_UserDefine(string ViewTableID, string DisplayString, SinoSZJS.Base.MetaData.EnumDefine.MDType_DisplayType DisplayType, SinoSZJS.Base.MetaData.Define.MD_ViewTableColumn[] TableColumnDefine) {
            return base.Channel.SaveViewTable_UserDefine(ViewTableID, DisplayString, DisplayType, TableColumnDefine);
        }
        
        public void SaveViewTableOrder_UserDefine(System.Collections.Generic.Dictionary<string, int> ChildTableOrder) {
            base.Channel.SaveViewTableOrder_UserDefine(ChildTableOrder);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_QueryModel GetQueryModelByName(string ModelName) {
            return base.Channel.GetQueryModelByName(ModelName);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_QueryModel GetQueryModelByID(string ModelID) {
            return base.Channel.GetQueryModelByID(ModelID);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_QueryModelGroup GetQueryModelGroup(string QueryModelGroupID) {
            return base.Channel.GetQueryModelGroup(QueryModelGroupID);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_RefTable GetRefTable(string RefTableName) {
            return base.Channel.GetRefTable(RefTableName);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_Nodes[] GetNodeList() {
            return base.Channel.GetNodeList();
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_Namespace[] GetNameSpaceAtNode(string NodeDWDM) {
            return base.Channel.GetNameSpaceAtNode(NodeDWDM);
        }
        
        public bool SaveNewNameSapce(SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace) {
            return base.Channel.SaveNewNameSapce(Namespace);
        }
        
        public bool SaveNodes(SinoSZJS.Base.MetaData.Define.MD_Nodes Nodes) {
            return base.Channel.SaveNodes(Nodes);
        }
        
        public bool SaveNewNodes(SinoSZJS.Base.MetaData.Define.MD_Nodes Nodes) {
            return base.Channel.SaveNewNodes(Nodes);
        }
        
        public bool DelNodes(string NodeID) {
            return base.Channel.DelNodes(NodeID);
        }
        
        public bool SaveNameSapce(SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace) {
            return base.Channel.SaveNameSapce(Namespace);
        }
        
        public bool DelNamespace(SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace) {
            return base.Channel.DelNamespace(Namespace);
        }
        
        public SinoSZJS.Base.MetaData.Define.DB_TableMeta[] GetDBTableList() {
            return base.Channel.GetDBTableList();
        }
        
        public SinoSZJS.Base.MetaData.Define.DB_TableMeta[] GetDBTableListOfDMB() {
            return base.Channel.GetDBTableListOfDMB();
        }
        
        public SinoSZJS.Base.MetaData.Define.DB_ColumnMeta[] GetDBColumnsOfTable(string TableName) {
            return base.Channel.GetDBColumnsOfTable(TableName);
        }
        
        public bool SaveNewTable(SinoSZJS.Base.MetaData.Define.DB_TableMeta TableMeta, SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace) {
            return base.Channel.SaveNewTable(TableMeta, Namespace);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_Table[] GetTablesAtNamespace(string NsName) {
            return base.Channel.GetTablesAtNamespace(NsName);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_Table GetTableByTableID(string TableID) {
            return base.Channel.GetTableByTableID(TableID);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_QueryModel[] GetQueryModelAtNamespace(string NsName) {
            return base.Channel.GetQueryModelAtNamespace(NsName);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_RefTable[] GetRefTableAtNamespace(string Namespace) {
            return base.Channel.GetRefTableAtNamespace(Namespace);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_TableColumn[] GetColumnsOfTable(string TableID) {
            return base.Channel.GetColumnsOfTable(TableID);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_ViewTable GetMainTableOfQueryModel(string QueryModelID) {
            return base.Channel.GetMainTableOfQueryModel(QueryModelID);
        }
        
        public string GetNewID() {
            return base.Channel.GetNewID();
        }
        
        public bool SaveTableDefine(SinoSZJS.Base.MetaData.Define.MD_Table Table) {
            return base.Channel.SaveTableDefine(Table);
        }
        
        public bool SaveNewQueryModel(SinoSZJS.Base.MetaData.Define.MD_QueryModel QueryModel) {
            return base.Channel.SaveNewQueryModel(QueryModel);
        }
        
        public bool SaveQueryModel(SinoSZJS.Base.MetaData.Define.MD_QueryModel QueryModel) {
            return base.Channel.SaveQueryModel(QueryModel);
        }
        
        public bool SaveViewMainTable(SinoSZJS.Base.MetaData.Define.MD_ViewTable ViewTable) {
            return base.Channel.SaveViewMainTable(ViewTable);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_ViewTable[] GetChildTableOfQueryModel(string QueryModelID) {
            return base.Channel.GetChildTableOfQueryModel(QueryModelID);
        }
        
        public bool SaveViewChildTable(SinoSZJS.Base.MetaData.Define.MD_ViewTable ViewTable) {
            return base.Channel.SaveViewChildTable(ViewTable);
        }
        
        public bool AddMainTableToQueryModel(string QueryModelID, SinoSZJS.Base.MetaData.Define.MD_Table SelectedTable) {
            return base.Channel.AddMainTableToQueryModel(QueryModelID, SelectedTable);
        }
        
        public bool AddChildTableToQueryModel(string QueryModelID, string MainTableID, SinoSZJS.Base.MetaData.Define.MD_Table SelectedTable) {
            return base.Channel.AddChildTableToQueryModel(QueryModelID, MainTableID, SelectedTable);
        }
        
        public bool IsExistChildTable(string ViewTableID) {
            return base.Channel.IsExistChildTable(ViewTableID);
        }
        
        public bool DelViewTable(string ViewTableID) {
            return base.Channel.DelViewTable(ViewTableID);
        }
        
        public bool IsExistChildOfView(string QueryModelID) {
            return base.Channel.IsExistChildOfView(QueryModelID);
        }
        
        public bool DelViewMeta(string QueryModelID) {
            return base.Channel.DelViewMeta(QueryModelID);
        }
        
        public bool DelViewAndChildren(string QueryModelID) {
            return base.Channel.DelViewAndChildren(QueryModelID);
        }
        
        public bool IsExistViewUsedTable(string TableID) {
            return base.Channel.IsExistViewUsedTable(TableID);
        }
        
        public bool DelTableMeta(string TableID) {
            return base.Channel.DelTableMeta(TableID);
        }
        
        public bool SaveNewRefTable(SinoSZJS.Base.MetaData.Define.DB_TableMeta TableMeta, SinoSZJS.Base.MetaData.Define.MD_Namespace Namespace) {
            return base.Channel.SaveNewRefTable(TableMeta, Namespace);
        }
        
        public System.Data.DataTable Get_RefTableColumn(string RefTableName) {
            return base.Channel.Get_RefTableColumn(RefTableName);
        }
        
        public bool SaveRefTable(SinoSZJS.Base.MetaData.Define.MD_RefTable RefTable, System.Data.DataTable RefData) {
            return base.Channel.SaveRefTable(RefTable, RefData);
        }
        
        public SinoSZJS.Base.MetaData.Define.MD_Menu[] GetMenuDefineOfNode(string NodeCode) {
            return base.Channel.GetMenuDefineOfNode(NodeCode);
        }
    }
}
