//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.1008
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace SinoSZClientBase.UserManagerService {
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="UserManagerService.IUserManagerService")]
    public interface IUserManagerService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/SaveUserMapping", ReplyAction="http://tempuri.org/IUserManagerService/SaveUserMappingResponse")]
        bool SaveUserMapping(string TRD_YHID, string JSYW_YHID, string TRD_YHM, string TRD_XM, string JSYW_XM);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetTRDUserInfo", ReplyAction="http://tempuri.org/IUserManagerService/GetTRDUserInfoResponse")]
        string GetTRDUserInfo(string _logonName, string dwid);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetUserListMapping", ReplyAction="http://tempuri.org/IUserManagerService/GetUserListMappingResponse")]
        SinoSZJS.Base.User.UserMappingInfo[] GetUserListMapping(decimal _orgid, decimal _levelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetUserListInOrg", ReplyAction="http://tempuri.org/IUserManagerService/GetUserListInOrgResponse")]
        SinoSZJS.Base.User.UserBaseInfo[] GetUserListInOrg(decimal _orgid, decimal _levelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetUserMobileList", ReplyAction="http://tempuri.org/IUserManagerService/GetUserMobileListResponse")]
        SinoSZJS.Base.User.UserExtInfo[] GetUserMobileList(decimal _orgid, decimal _LevelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetPersionListInOrg", ReplyAction="http://tempuri.org/IUserManagerService/GetPersionListInOrgResponse")]
        SinoSZJS.Base.User.PersonBaseInfo[] GetPersionListInOrg(decimal _orgid, decimal _levelNum);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/RegisterUser", ReplyAction="http://tempuri.org/IUserManagerService/RegisterUserResponse")]
        bool RegisterUser(SinoSZJS.Base.User.PersonBaseInfo _personBaseInfo);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetRoleList", ReplyAction="http://tempuri.org/IUserManagerService/GetRoleListResponse")]
        SinoSZJS.Base.Authorize.SinoRole[] GetRoleList();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/AddNewRole", ReplyAction="http://tempuri.org/IUserManagerService/AddNewRoleResponse")]
        bool AddNewRole(SinoSZJS.Base.Authorize.SinoRole _newRole);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetRightListByRoleID", ReplyAction="http://tempuri.org/IUserManagerService/GetRightListByRoleIDResponse")]
        SinoSZJS.Base.User.UserRightInfo[] GetRightListByRoleID(string _roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetModelRightListByRoleID", ReplyAction="http://tempuri.org/IUserManagerService/GetModelRightListByRoleIDResponse")]
        SinoSZJS.Base.User.UserQueryModelInfo[] GetModelRightListByRoleID(string _roleID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/SaveRightsOfRole", ReplyAction="http://tempuri.org/IUserManagerService/SaveRightsOfRoleResponse")]
        bool SaveRightsOfRole(SinoSZJS.Base.Authorize.SinoRole _role, SinoSZJS.Base.User.UserRightInfo[] _functionRights, SinoSZJS.Base.User.UserQueryModelInfo[] _modelRights);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/DeleteRole", ReplyAction="http://tempuri.org/IUserManagerService/DeleteRoleResponse")]
        bool DeleteRole(SinoSZJS.Base.Authorize.SinoRole _role);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetPostListInOrg", ReplyAction="http://tempuri.org/IUserManagerService/GetPostListInOrgResponse")]
        SinoSZJS.Base.Authorize.SinoPost[] GetPostListInOrg(SinoSZJS.Base.Authorize.SinoOrganize CurrentOrg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/AddPostOfOrg", ReplyAction="http://tempuri.org/IUserManagerService/AddPostOfOrgResponse")]
        bool AddPostOfOrg(string _postName, string _postDescript, int _PostLevel, decimal _orgID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/DelPostOfOrg", ReplyAction="http://tempuri.org/IUserManagerService/DelPostOfOrgResponse")]
        bool DelPostOfOrg(string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/ModifyPostOfOrg", ReplyAction="http://tempuri.org/IUserManagerService/ModifyPostOfOrgResponse")]
        bool ModifyPostOfOrg(string _postName, string _postDescript, int _PostLevel, string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetRoleOfPost", ReplyAction="http://tempuri.org/IUserManagerService/GetRoleOfPostResponse")]
        SinoSZJS.Base.Authorize.SinoRole[] GetRoleOfPost(string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/SaveRolesOfPost", ReplyAction="http://tempuri.org/IUserManagerService/SaveRolesOfPostResponse")]
        bool SaveRolesOfPost(SinoSZJS.Base.Authorize.SinoRole[] _roleList, string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/PastePostToOrg", ReplyAction="http://tempuri.org/IUserManagerService/PastePostToOrgResponse")]
        bool PastePostToOrg(SinoSZJS.Base.Authorize.SinoPost[] _clipPad, SinoSZJS.Base.Authorize.SinoOrganize _org);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetRightListByPostID", ReplyAction="http://tempuri.org/IUserManagerService/GetRightListByPostIDResponse")]
        SinoSZJS.Base.User.UserRightInfo[] GetRightListByPostID(string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetModelRightListByPostID", ReplyAction="http://tempuri.org/IUserManagerService/GetModelRightListByPostIDResponse")]
        SinoSZJS.Base.User.UserQueryModelInfo[] GetModelRightListByPostID(string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetPostListByUserID", ReplyAction="http://tempuri.org/IUserManagerService/GetPostListByUserIDResponse")]
        SinoSZJS.Base.User.UserPostInfo[] GetPostListByUserID(string _userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/IsExistUserPost", ReplyAction="http://tempuri.org/IUserManagerService/IsExistUserPostResponse")]
        bool IsExistUserPost(string _userID, string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/AddUserPost", ReplyAction="http://tempuri.org/IUserManagerService/AddUserPostResponse")]
        bool AddUserPost(string _userID, string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/UnRegisterUser", ReplyAction="http://tempuri.org/IUserManagerService/UnRegisterUserResponse")]
        bool UnRegisterUser(string _userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/DeleteUserPost", ReplyAction="http://tempuri.org/IUserManagerService/DeleteUserPostResponse")]
        bool DeleteUserPost(string _userID, string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/SetDefaultUserPost", ReplyAction="http://tempuri.org/IUserManagerService/SetDefaultUserPostResponse")]
        bool SetDefaultUserPost(string _userID, string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetUsersOfPost", ReplyAction="http://tempuri.org/IUserManagerService/GetUsersOfPostResponse")]
        SinoSZJS.Base.User.UserBaseInfo[] GetUsersOfPost(string _postID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/DeleteUserOfPost", ReplyAction="http://tempuri.org/IUserManagerService/DeleteUserOfPostResponse")]
        bool DeleteUserOfPost(string _postID, string _userID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/IsExistYHM", ReplyAction="http://tempuri.org/IUserManagerService/IsExistYHMResponse")]
        bool IsExistYHM(string _yhm);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/AddUserInfo", ReplyAction="http://tempuri.org/IUserManagerService/AddUserInfoResponse")]
        bool AddUserInfo(string YHM, string XM, string XB, string SFZH, decimal SSDW, string DWGUID, string HGGH, string JH, string ZWMC, string ZWJB, string EMAIL);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/GetDWGUID", ReplyAction="http://tempuri.org/IUserManagerService/GetDWGUIDResponse")]
        string GetDWGUID(decimal DWID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/AddNewOrg", ReplyAction="http://tempuri.org/IUserManagerService/AddNewOrgResponse")]
        bool AddNewOrg(string ShotName, string FullName, SinoSZJS.Base.Authorize.SinoOrganize FatherOrg);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/DelOrg", ReplyAction="http://tempuri.org/IUserManagerService/DelOrgResponse")]
        bool DelOrg(SinoSZJS.Base.Authorize.SinoOrganize sinoOrganize);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/IsExistChildOrg", ReplyAction="http://tempuri.org/IUserManagerService/IsExistChildOrgResponse")]
        bool IsExistChildOrg(decimal DWID);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IUserManagerService/SaveUserExtInfo", ReplyAction="http://tempuri.org/IUserManagerService/SaveUserExtInfoResponse")]
        bool SaveUserExtInfo(string LogonName, string Mobile, string Email);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IUserManagerServiceChannel : SinoSZClientBase.UserManagerService.IUserManagerService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class UserManagerServiceClient : System.ServiceModel.ClientBase<SinoSZClientBase.UserManagerService.IUserManagerService>, SinoSZClientBase.UserManagerService.IUserManagerService {
        
        public UserManagerServiceClient() {
        }
        
        public UserManagerServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public UserManagerServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public UserManagerServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public bool SaveUserMapping(string TRD_YHID, string JSYW_YHID, string TRD_YHM, string TRD_XM, string JSYW_XM) {
            return base.Channel.SaveUserMapping(TRD_YHID, JSYW_YHID, TRD_YHM, TRD_XM, JSYW_XM);
        }
        
        public string GetTRDUserInfo(string _logonName, string dwid) {
            return base.Channel.GetTRDUserInfo(_logonName, dwid);
        }
        
        public SinoSZJS.Base.User.UserMappingInfo[] GetUserListMapping(decimal _orgid, decimal _levelNum) {
            return base.Channel.GetUserListMapping(_orgid, _levelNum);
        }
        
        public SinoSZJS.Base.User.UserBaseInfo[] GetUserListInOrg(decimal _orgid, decimal _levelNum) {
            return base.Channel.GetUserListInOrg(_orgid, _levelNum);
        }
        
        public SinoSZJS.Base.User.UserExtInfo[] GetUserMobileList(decimal _orgid, decimal _LevelNum) {
            return base.Channel.GetUserMobileList(_orgid, _LevelNum);
        }
        
        public SinoSZJS.Base.User.PersonBaseInfo[] GetPersionListInOrg(decimal _orgid, decimal _levelNum) {
            return base.Channel.GetPersionListInOrg(_orgid, _levelNum);
        }
        
        public bool RegisterUser(SinoSZJS.Base.User.PersonBaseInfo _personBaseInfo) {
            return base.Channel.RegisterUser(_personBaseInfo);
        }
        
        public SinoSZJS.Base.Authorize.SinoRole[] GetRoleList() {
            return base.Channel.GetRoleList();
        }
        
        public bool AddNewRole(SinoSZJS.Base.Authorize.SinoRole _newRole) {
            return base.Channel.AddNewRole(_newRole);
        }
        
        public SinoSZJS.Base.User.UserRightInfo[] GetRightListByRoleID(string _roleID) {
            return base.Channel.GetRightListByRoleID(_roleID);
        }
        
        public SinoSZJS.Base.User.UserQueryModelInfo[] GetModelRightListByRoleID(string _roleID) {
            return base.Channel.GetModelRightListByRoleID(_roleID);
        }
        
        public bool SaveRightsOfRole(SinoSZJS.Base.Authorize.SinoRole _role, SinoSZJS.Base.User.UserRightInfo[] _functionRights, SinoSZJS.Base.User.UserQueryModelInfo[] _modelRights) {
            return base.Channel.SaveRightsOfRole(_role, _functionRights, _modelRights);
        }
        
        public bool DeleteRole(SinoSZJS.Base.Authorize.SinoRole _role) {
            return base.Channel.DeleteRole(_role);
        }
        
        public SinoSZJS.Base.Authorize.SinoPost[] GetPostListInOrg(SinoSZJS.Base.Authorize.SinoOrganize CurrentOrg) {
            return base.Channel.GetPostListInOrg(CurrentOrg);
        }
        
        public bool AddPostOfOrg(string _postName, string _postDescript, int _PostLevel, decimal _orgID) {
            return base.Channel.AddPostOfOrg(_postName, _postDescript, _PostLevel, _orgID);
        }
        
        public bool DelPostOfOrg(string _postID) {
            return base.Channel.DelPostOfOrg(_postID);
        }
        
        public bool ModifyPostOfOrg(string _postName, string _postDescript, int _PostLevel, string _postID) {
            return base.Channel.ModifyPostOfOrg(_postName, _postDescript, _PostLevel, _postID);
        }
        
        public SinoSZJS.Base.Authorize.SinoRole[] GetRoleOfPost(string _postID) {
            return base.Channel.GetRoleOfPost(_postID);
        }
        
        public bool SaveRolesOfPost(SinoSZJS.Base.Authorize.SinoRole[] _roleList, string _postID) {
            return base.Channel.SaveRolesOfPost(_roleList, _postID);
        }
        
        public bool PastePostToOrg(SinoSZJS.Base.Authorize.SinoPost[] _clipPad, SinoSZJS.Base.Authorize.SinoOrganize _org) {
            return base.Channel.PastePostToOrg(_clipPad, _org);
        }
        
        public SinoSZJS.Base.User.UserRightInfo[] GetRightListByPostID(string _postID) {
            return base.Channel.GetRightListByPostID(_postID);
        }
        
        public SinoSZJS.Base.User.UserQueryModelInfo[] GetModelRightListByPostID(string _postID) {
            return base.Channel.GetModelRightListByPostID(_postID);
        }
        
        public SinoSZJS.Base.User.UserPostInfo[] GetPostListByUserID(string _userID) {
            return base.Channel.GetPostListByUserID(_userID);
        }
        
        public bool IsExistUserPost(string _userID, string _postID) {
            return base.Channel.IsExistUserPost(_userID, _postID);
        }
        
        public bool AddUserPost(string _userID, string _postID) {
            return base.Channel.AddUserPost(_userID, _postID);
        }
        
        public bool UnRegisterUser(string _userID) {
            return base.Channel.UnRegisterUser(_userID);
        }
        
        public bool DeleteUserPost(string _userID, string _postID) {
            return base.Channel.DeleteUserPost(_userID, _postID);
        }
        
        public bool SetDefaultUserPost(string _userID, string _postID) {
            return base.Channel.SetDefaultUserPost(_userID, _postID);
        }
        
        public SinoSZJS.Base.User.UserBaseInfo[] GetUsersOfPost(string _postID) {
            return base.Channel.GetUsersOfPost(_postID);
        }
        
        public bool DeleteUserOfPost(string _postID, string _userID) {
            return base.Channel.DeleteUserOfPost(_postID, _userID);
        }
        
        public bool IsExistYHM(string _yhm) {
            return base.Channel.IsExistYHM(_yhm);
        }
        
        public bool AddUserInfo(string YHM, string XM, string XB, string SFZH, decimal SSDW, string DWGUID, string HGGH, string JH, string ZWMC, string ZWJB, string EMAIL) {
            return base.Channel.AddUserInfo(YHM, XM, XB, SFZH, SSDW, DWGUID, HGGH, JH, ZWMC, ZWJB, EMAIL);
        }
        
        public string GetDWGUID(decimal DWID) {
            return base.Channel.GetDWGUID(DWID);
        }
        
        public bool AddNewOrg(string ShotName, string FullName, SinoSZJS.Base.Authorize.SinoOrganize FatherOrg) {
            return base.Channel.AddNewOrg(ShotName, FullName, FatherOrg);
        }
        
        public bool DelOrg(SinoSZJS.Base.Authorize.SinoOrganize sinoOrganize) {
            return base.Channel.DelOrg(sinoOrganize);
        }
        
        public bool IsExistChildOrg(decimal DWID) {
            return base.Channel.IsExistChildOrg(DWID);
        }
        
        public bool SaveUserExtInfo(string LogonName, string Mobile, string Email) {
            return base.Channel.SaveUserExtInfo(LogonName, Mobile, Email);
        }
    }
}
